{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport React, { useState, useEffect } from 'react';\nimport { BarCodeScanner } from 'expo-barcode-scanner';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { useToast } from \"react-native-toast-notifications\";\nimport { auth, db } from \"../Config/Firebase\";\nimport { onAuthStateChanged } from \"firebase/auth\";\nimport { addDoc, collection, getDocs, query, where } from 'firebase/firestore';\nimport moment from 'moment';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ClockIn = function ClockIn(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    hasPermission = _useState2[0],\n    setHasPermission = _useState2[1];\n  var _useState3 = useState(),\n    _useState4 = _slicedToArray(_useState3, 2),\n    scanData = _useState4[0],\n    setScanData = _useState4[1];\n  var _useState5 = useState({}),\n    _useState6 = _slicedToArray(_useState5, 2),\n    userInfo = _useState6[0],\n    setInfo = _useState6[1];\n  var _useState7 = useState({}),\n    _useState8 = _slicedToArray(_useState7, 2),\n    regDetails = _useState8[0],\n    setRegDetails = _useState8[1];\n\n  useEffect(function () {\n    _asyncToGenerator(function* () {\n      var _yield$BarCodeScanner = yield BarCodeScanner.requestPermissionsAsync(),\n        status = _yield$BarCodeScanner.status;\n      setHasPermission(status === 'granted');\n    });\n\n    var user = auth.currentUser;\n    var getUserData = function () {\n      var _ref3 = _asyncToGenerator(function* () {\n        var userRef = collection(db, 'users');\n        var q = query(collection(db, 'users'), where('userId', '==', user.uid));\n        var data = yield getDocs(q);\n        data.forEach(function (results) {\n          console.log(results.data());\n          setInfo(results.data());\n        });\n      });\n      return function getUserData() {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n    getUserData();\n  }, []);\n\n  function Register() {\n    var userRef = collection(db, 'clockIn');\n    var attendanceDetails = {\n      name: scanData.name,\n      surname: scanData.surname,\n      email: scanData.email,\n      userId: scanData.userId,\n      date: moment().format('LL'),\n      time: moment().format('LT')\n    };\n    addDoc(userRef, attendanceDetails, scanData.userId).then(function () {\n      console.log('data added');\n    }).catch(function (error) {\n      console.log(error.message);\n    });\n  }\n  if (hasPermission) {\n    return _jsx(_Fragment, {\n      children: _jsx(View, {\n        style: styles.container,\n        children: _jsx(Text, {\n          children: \"Please grand camera permission!\"\n        })\n      })\n    });\n  }\n  var handleBarCodeScanner = function handleBarCodeScanner(_ref4) {\n    var type = _ref4.type,\n      data = _ref4.data;\n    var date = new Date().toLocaleString();\n    var details = {\n      name: 'Moraswi',\n      surname: 'Tahbiso',\n      time: date\n    };\n    setScanData(data = userInfo);\n    console.log('data', data);\n    console.log('data', type);\n  };\n  return _jsxs(_Fragment, {\n    children: [_jsx(BarCodeScanner, {\n      onBarCodeRead: function onBarCodeRead(scan) {\n        return alert(scan.data);\n      },\n      style: [StyleSheet.absoluteFill, styles.container],\n      onBarCodeScanned: scanData ? undefined : handleBarCodeScanner\n    }), _jsx(View, {\n      style: styles.layerTop\n    }), _jsxs(View, {\n      style: styles.layerCenter,\n      children: [_jsx(View, {\n        style: styles.layerLeft\n      }), _jsx(View, {\n        style: styles.focused\n      }), _jsx(View, {\n        style: styles.layerRight\n      })]\n    }), _jsx(View, {\n      style: styles.layerBottom\n    }), scanData && navigation.navigate('landing'), scanData && Alert.alert(\"Welcome\", \" \\\"You have successfully clocked in \\n\\n  Time: \" + moment().format('LT') + \"\\\" \", [{\n      text: \"OK\"\n    }]), scanData && Register()]\n  });\n};\n\nvar opacity = 'rgba(0, 0, 0, .6)';\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'column'\n  },\n  layerTop: {\n    flex: 1.2,\n    backgroundColor: opacity\n  },\n  layerCenter: {\n    flex: 1,\n    flexDirection: 'row'\n  },\n  layerLeft: {\n    flex: 1.5,\n    backgroundColor: opacity\n  },\n  focused: {\n    flex: 12\n  },\n  layerRight: {\n    flex: 1.5,\n    backgroundColor: opacity\n  },\n  layerBottom: {\n    flex: 1,\n    borderColor: 'white',\n    backgroundColor: opacity\n  }\n});\nexport default ClockIn;","map":{"version":3,"names":["React","useState","useEffect","BarCodeScanner","useToast","auth","db","onAuthStateChanged","addDoc","collection","getDocs","query","where","moment","ClockIn","navigation","hasPermission","setHasPermission","scanData","setScanData","userInfo","setInfo","regDetails","setRegDetails","requestPermissionsAsync","status","user","currentUser","getUserData","userRef","q","uid","data","forEach","results","console","log","Register","attendanceDetails","name","surname","email","userId","date","format","time","then","catch","error","message","styles","container","handleBarCodeScanner","type","Date","toLocaleString","details","scan","alert","StyleSheet","absoluteFill","undefined","layerTop","layerCenter","layerLeft","focused","layerRight","layerBottom","navigate","Alert","text","opacity","create","flex","flexDirection","backgroundColor","borderColor"],"sources":["/Users/mlab/Documents/Clockify/components/ClockIn.js"],"sourcesContent":["import { View, Text ,StyleSheet,Alert , } from 'react-native'\r\nimport React,{useState,useEffect} from 'react'\r\nimport { BarCodeScanner } from 'expo-barcode-scanner'\r\nimport { Button } from 'react-native'\r\nimport { useToast } from \"react-native-toast-notifications\";\r\nimport { auth, db } from '../Config/Firebase';\r\nimport { onAuthStateChanged } from \"firebase/auth\";\r\nimport { addDoc, collection, getDocs, query, where } from 'firebase/firestore';\r\n\r\nimport moment from 'moment'\r\nconst ClockIn = ({navigation}) => {\r\n    const [hasPermission, setHasPermission] = useState(false) \r\n    const [scanData, setScanData] = useState()\r\n    const [userInfo, setInfo] = useState({})\r\n    const [regDetails, setRegDetails] = useState({})\r\n\r\n    //getting current logged in user\r\n    // function userDetails(){\r\n    //   onAuthStateChanged(auth, (user) => {\r\n    //     if (user) {\r\n    //       // User is signed in, see docs for a list of available properties\r\n    //       // https://firebase.google.com/docs/reference/js/firebase.User\r\n    //       const uid = user.uid;\r\n    //       console.log(uid)\r\n    //       console.log(user)\r\n    //       // ...\r\n    //     } else {\r\n    //       // User is signed out\r\n    //       // ...\r\n    //     }\r\n    //   });\r\n    // }\r\n\r\n   \r\n    \r\n\r\n    useEffect(()=>{\r\n     \r\n     \r\n      \r\n\r\n\r\n\r\n\r\n      (async()=>{\r\n          const {status} = await BarCodeScanner.requestPermissionsAsync();\r\n          setHasPermission(status==='granted')\r\n      })\r\n\r\n      //getting current logged user\r\n      const user = auth.currentUser;\r\n\r\n      const getUserData = async() =>{\r\n        const userRef = collection(db,'users')\r\n        const q = query(collection(db,'users'), where('userId', '==', user.uid))\r\n        const data = await getDocs(q);\r\n        data.forEach((results)=>{\r\n          console.log(results.data())\r\n          setInfo(results.data())\r\n        })        \r\n\r\n\r\n      }\r\n      getUserData()\r\n    },[])\r\n\r\n    //adding attendance data to firebase\r\n    function Register(){\r\n      const userRef = collection(db, 'clockIn')\r\n\r\n      const attendanceDetails = {\r\n            name:scanData.name,\r\n            surname:scanData.surname,\r\n            email:scanData.email,\r\n            userId:scanData.userId,\r\n            date:moment().format('LL'),\r\n            time:moment().format('LT'),\r\n\r\n      }\r\n\r\n      addDoc(userRef,attendanceDetails, scanData.userId).then(()=>{\r\n        console.log('data added')\r\n       }).catch((error)=>{\r\n          console.log(error.message)\r\n       })\r\n  \r\n    }\r\n\r\n    \r\n\r\n    if(hasPermission){\r\n        return(\r\n            <>\r\n                <View style={styles.container}>\r\n                  <Text>Please grand camera permission!</Text>\r\n               </View>\r\n            </>\r\n        )\r\n    }\r\n\r\n    const handleBarCodeScanner = ({type,data}) =>{\r\n        const date = new Date().toLocaleString();\r\n        const details = {\r\n            name:'Moraswi',\r\n            surname:'Tahbiso',\r\n            time:date\r\n        }\r\n       \r\n        setScanData(data=userInfo);\r\n       \r\n        console.log('data', data)\r\n        \r\n\r\n        console.log('data', type)\r\n\r\n       \r\n    }\r\n  return (\r\n    <>\r\n    {/* <View style={styles.container}>\r\n    \r\n  \r\n     <BarCodeScanner\r\n      \r\n       \r\n      style={StyleSheet.absoluteFill}\r\n      onBarCodeScanned = {scanData? undefined : handleBarCodeScanner}\r\n     />\r\n   \r\n    \r\n     {scanData && navigation.navigate('Home') }\r\n\r\n       {\r\n           scanData&&  Alert.alert(\r\n            \"Welcome\",\r\n           ` \"You have successfully clocked in \\n\\n  Time: ${moment().format('LT')}\" `,\r\n            [\r\n            \r\n              { text: \"OK\" }\r\n            ]\r\n          )\r\n       }\r\n       {\r\n        scanData && Register()\r\n       }\r\n\r\n     \r\n   </View> */}\r\n\r\n<BarCodeScanner\r\n        onBarCodeRead={(scan) => alert(scan.data)}\r\n        style={[StyleSheet.absoluteFill, styles.container]}\r\n        onBarCodeScanned = {scanData? undefined : handleBarCodeScanner}\r\n      />\r\n        <View style={styles.layerTop} />\r\n        <View style={styles.layerCenter}>\r\n          <View style={styles.layerLeft} />\r\n          <View style={styles.focused} />\r\n          <View style={styles.layerRight} />\r\n        </View>\r\n        <View style={styles.layerBottom} />\r\n      {scanData && navigation.navigate('landing')}\r\n\r\n      {\r\n        scanData && Alert.alert(\r\n          \"Welcome\",\r\n          ` \"You have successfully clocked in \\n\\n  Time: ${moment().format('LT')}\" `,\r\n          [\r\n\r\n            { text: \"OK\" }\r\n          ]\r\n        )\r\n      }\r\n      {\r\n        scanData && Register()\r\n      }\r\n    \r\n</>\r\n\r\n  )\r\n}\r\n\r\n// const styles = StyleSheet.create({\r\n//     container: {\r\n//       flex: 1,\r\n//       backgroundColor: 'white',\r\n//       alignItems: 'center', \r\n//       justifyContent: 'center',\r\n//     },\r\n   \r\n//   });\r\n\r\nconst opacity = 'rgba(0, 0, 0, .6)';\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    flexDirection: 'column'\r\n    \r\n  },\r\n  layerTop: {\r\n  flex:1.2,\r\n    backgroundColor: opacity\r\n  },\r\n  layerCenter: {\r\n    flex: 1,\r\n    flexDirection: 'row',\r\n   \r\n  },\r\n  layerLeft: {\r\n    flex: 1.5,\r\n    backgroundColor: opacity\r\n  \r\n  },\r\n  focused: {\r\n    flex: 12,\r\n    \r\n  },\r\n  layerRight: {\r\n    flex: 1.5,\r\n    backgroundColor: opacity\r\n  },\r\n  layerBottom: {\r\n    flex: 1,\r\n    \r\n  \r\n    borderColor:'white',\r\n\r\n    backgroundColor: opacity\r\n  },\r\n});\r\n  \r\n\r\nexport default ClockIn\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}