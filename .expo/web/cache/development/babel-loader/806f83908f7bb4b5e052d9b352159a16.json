{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport React, { useState, useEffect } from 'react';\nimport { auth, db } from \"../Config/Firebase\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar windowWidth = Dimensions.get('window').width;\nvar windowHeight = Dimensions.get('window').height;\nvar ProfileModal = function ProfileModal() {\n  var _useState = useState(),\n    _useState2 = _slicedToArray(_useState, 2),\n    modalVisible = _useState2[0],\n    setModalVisible = _useState2[1];\n  return _jsx(_Fragment, {\n    children: _jsx(View, {\n      style: styles.centeredView,\n      children: _jsx(Modal, {\n        animationType: \"slide\",\n        transparent: true,\n        visible: setModalVisible,\n        onRequestClose: function onRequestClose() {\n          Alert.alert(\"Modal has been closed.\");\n          setModalVisible(!modalVisible);\n        },\n        children: _jsx(View, {\n          style: styles.centeredView,\n          children: _jsxs(View, {\n            style: styles.modalView,\n            children: [_jsx(Pressable, {\n              style: styles.closeButton,\n              onPress: function onPress() {\n                return setModalVisible(!modalVisible);\n              },\n              children: _jsx(Text, {\n                style: styles.closeButtonText,\n                children: \"close\"\n              })\n            }), _jsxs(View, {\n              style: styles.Modalheaders,\n              children: [_jsx(Text, {\n                style: styles.headerText,\n                children: \"date\"\n              }), _jsx(Text, {\n                style: styles.headerText,\n                children: \"Time\"\n              })]\n            }), _jsx(ScrollView, {})]\n          })\n        })\n      })\n    })\n  });\n};\nexport default ProfileModal;\nvar styles = StyleSheet.create({\n  Modalheaders: {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    marginTop: 30,\n    borderBottomWidth: 2,\n    borderBottomColor: 'black',\n    width: windowWidth * 0.9,\n    alignSelf: 'center'\n  },\n  details: {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    borderBottomWidth: 1,\n    borderBottomColor: '#d6d4d4',\n    width: windowWidth * 0.9,\n    alignSelf: 'center',\n    marginTop: 18\n  },\n  headerText: {\n    fontSize: 16\n  },\n  moreButton: {\n    width: windowWidth * 0.3,\n    backgroundColor: '#4b97cb',\n    padding: 12,\n    marginTop: 10,\n    alignSelf: 'center',\n    borderRadius: 15\n  },\n  modalView: {\n    margin: 20,\n    backgroundColor: \"white\",\n    borderRadius: 20,\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 4,\n    elevation: 5,\n    height: windowHeight * 0.8,\n    width: windowWidth * 0.9\n  },\n  button: {\n    borderRadius: 20,\n    padding: 10,\n    elevation: 2\n  },\n  buttonClose: {\n    backgroundColor: \"#2196F3\"\n  },\n  textStyle: {\n    color: \"white\",\n    fontWeight: \"bold\",\n    textAlign: \"center\"\n  },\n  modalText: {\n    marginBottom: 15,\n    textAlign: \"center\"\n  },\n  closeButton: {\n    backgroundColor: 'white',\n    width: '100%',\n    padding: 12,\n    elevation: 10\n  },\n  closeButtonText: {\n    textAlign: 'center',\n    color: '#4b97cb',\n    fontSize: 20\n  }\n});","map":{"version":3,"names":["React","useState","useEffect","auth","db","windowWidth","Dimensions","get","width","windowHeight","height","ProfileModal","modalVisible","setModalVisible","styles","centeredView","Alert","alert","modalView","closeButton","closeButtonText","Modalheaders","headerText","StyleSheet","create","display","flexDirection","justifyContent","marginTop","borderBottomWidth","borderBottomColor","alignSelf","details","fontSize","moreButton","backgroundColor","padding","borderRadius","margin","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","button","buttonClose","textStyle","color","fontWeight","textAlign","modalText","marginBottom"],"sources":["/Users/mlab/Documents/Clockify/components/ProfileModal.js"],"sourcesContent":["import { View,Text,Modal,ScrollView,KeyboardAvoidingView,ActivityIndicator, Pressable, Alert, StyleSheet } from 'react-native'\r\nimport React,{useState,useEffect} from 'react'\r\nimport { auth, db } from '../Config/Firebase';\r\nimport { Dimensions } from 'react-native';\r\nconst windowWidth = Dimensions.get('window').width;\r\nconst windowHeight = Dimensions.get('window').height;\r\n\r\n\r\n\r\nconst ProfileModal = () =>{\r\n\r\n    const [modalVisible, setModalVisible] = useState();\r\n    return(\r\n        <>\r\n    <View style={styles.centeredView}>\r\n      <Modal\r\n        animationType=\"slide\"\r\n        transparent={true}\r\n        visible={setModalVisible}\r\n        onRequestClose={() => {\r\n          Alert.alert(\"Modal has been closed.\");\r\n          setModalVisible(!modalVisible);\r\n        }}\r\n      >\r\n         \r\n        <View style={styles.centeredView}>\r\n          <View style={styles.modalView}>\r\n            <Pressable  style={styles.closeButton}  onPress={() => setModalVisible(!modalVisible)}>\r\n            <Text   style={styles.closeButtonText}>close</Text>\r\n            </Pressable>\r\n            {/* <View  style={styles.closeButton}><Text  style={styles.closeButtonText}>close</Text></View> */}\r\n         \r\n            {/* <Pressable\r\n              style={[styles.button, styles.buttonClose]}\r\n              onPress={() => setModalVisible(!modalVisible)}\r\n            >\r\n              <Text style={styles.textStyle}>Hide Modal</Text>\r\n            </Pressable> */}\r\n           \r\n            <View style={styles.Modalheaders}>\r\n                   <Text style={styles.headerText}>\r\n                        date\r\n                   </Text>\r\n                   <Text  style={styles.headerText}>\r\n                        Time\r\n                   </Text>\r\n                   \r\n              </View>\r\n              <ScrollView>\r\n               \r\n             \r\n\r\n             \r\n\r\n             \r\n              </ScrollView>\r\n              \r\n   \r\n      \r\n\r\n          </View>\r\n        </View>\r\n\r\n        \r\n      </Modal>\r\n     \r\n    </View>\r\n        \r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProfileModal;\r\n\r\nconst styles = StyleSheet.create({\r\n   \r\n    Modalheaders:{\r\n       display:'flex',\r\n       flexDirection:'row',\r\n       justifyContent:'space-around',\r\n       marginTop:30,\r\n       borderBottomWidth:2,\r\n       borderBottomColor:'black',\r\n       width: windowWidth*0.9,\r\n       alignSelf:'center',\r\n    },\r\n    details:{\r\n       display:'flex',\r\n       flexDirection:'row',\r\n       justifyContent:'space-around',\r\n        borderBottomWidth:1,\r\n       borderBottomColor:'#d6d4d4',\r\n       width: windowWidth*0.9,\r\n       alignSelf:'center',\r\n       marginTop:18\r\n    },\r\n    headerText:{\r\n        fontSize:16\r\n    },\r\n    moreButton:{\r\n      width:windowWidth*0.3,\r\n      backgroundColor:'#4b97cb',\r\n      padding:12,\r\n      marginTop:10,\r\n      alignSelf:'center',\r\n      borderRadius:15\r\n    },\r\n\r\n    modalView: {\r\n      margin: 20,\r\n      backgroundColor: \"white\",\r\n      borderRadius: 20,\r\n    \r\n    \r\n      shadowColor: \"#000\",\r\n      shadowOffset: {\r\n        width: 0,\r\n        height: 2\r\n      },\r\n      shadowOpacity: 0.25,\r\n      shadowRadius: 4,\r\n      elevation: 5,\r\n      height:windowHeight*0.8,\r\n      width:windowWidth*0.9\r\n    },\r\n    button: {\r\n      borderRadius: 20,\r\n      padding: 10,\r\n      elevation: 2\r\n    },\r\n\r\n    buttonClose: {\r\n      backgroundColor: \"#2196F3\",\r\n    },\r\n    textStyle: {\r\n      color: \"white\",\r\n      fontWeight: \"bold\",\r\n      textAlign: \"center\"\r\n    },\r\n    modalText: {\r\n      marginBottom: 15,\r\n      textAlign: \"center\"\r\n    },\r\n    closeButton:{\r\n    \r\n      backgroundColor:'white',\r\n      width:'100%',\r\n      padding:12,\r\n      elevation:10\r\n    },\r\ncloseButtonText:{\r\n   textAlign:'center',\r\n   color:'#4b97cb',\r\n   fontSize:20\r\n}\r\n}) "],"mappings":"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"},"metadata":{},"sourceType":"module"}